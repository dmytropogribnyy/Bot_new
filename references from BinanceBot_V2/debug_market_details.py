#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã markets
"""

import ccxt
import os
import json
from dotenv import load_dotenv

load_dotenv()

def debug_market_details():
    """–î–µ—Ç–∞–ª—å–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É markets"""

    exchange = ccxt.binance({
        'apiKey': os.getenv('BINANCE_API_KEY'),
        'secret': os.getenv('BINANCE_API_SECRET'),
        'sandbox': False,
        'options': {
            'defaultType': 'future',
        }
    })

    print("üîç –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã markets...")
    print("=" * 60)

    try:
        markets = exchange.load_markets()

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—à–∏ —Å–∏–º–≤–æ–ª—ã
        with open('data/valid_usdc_symbols.json', 'r') as f:
            our_symbols = json.load(f)

        print(f"üìä –í—Å–µ–≥–æ —Ä—ã–Ω–∫–æ–≤: {len(markets)}")
        print(f"üìä –ù–∞—à–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤: {len(our_symbols)}")

        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–∞—à–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤
        for symbol in our_symbols[:5]:
            if symbol in markets:
                market = markets[symbol]
                print(f"\nüìã –ê–Ω–∞–ª–∏–∑ {symbol}:")
                print(f"   ‚Ä¢ –¢–∏–ø: {market.get('type', 'N/A')}")
                print(f"   ‚Ä¢ Spot: {market.get('spot', 'N/A')}")
                print(f"   ‚Ä¢ Future: {market.get('future', 'N/A')}")
                print(f"   ‚Ä¢ Swap: {market.get('swap', 'N/A')}")
                print(f"   ‚Ä¢ Quote: {market.get('quote', 'N/A')}")
                print(f"   ‚Ä¢ Base: {market.get('base', 'N/A')}")
                print(f"   ‚Ä¢ Active: {market.get('active', 'N/A')}")
                print(f"   ‚Ä¢ Contract: {market.get('contract', 'N/A')}")
                print(f"   ‚Ä¢ ContractType: {market.get('contractType', 'N/A')}")
                print(f"   ‚Ä¢ Expiry: {market.get('expiry', 'N/A')}")
                print(f"   ‚Ä¢ Strike: {market.get('strike', 'N/A')}")
                print(f"   ‚Ä¢ SettleType: {market.get('settleType', 'N/A')}")
                print(f"   ‚Ä¢ Linear: {market.get('linear', 'N/A')}")
                print(f"   ‚Ä¢ Inverse: {market.get('inverse', 'N/A')}")
            else:
                print(f"\n‚ùå {symbol} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ markets")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —Å USDC
        usdc_symbols = [s for s in markets.keys() if 'USDC' in s]
        print(f"\nüìä –í—Å–µ–≥–æ —Å–∏–º–≤–æ–ª–æ–≤ —Å USDC: {len(usdc_symbols)}")

        for symbol in usdc_symbols[:10]:
            market = markets[symbol]
            print(f"   ‚Ä¢ {symbol}: type={market.get('type')}, future={market.get('future')}, quote={market.get('quote')}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã:")

        # –§–∏–ª—å—Ç—Ä 1: USDC –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
        usdc_in_name = [s for s in markets.keys() if 'USDC' in s]
        print(f"   ‚Ä¢ USDC –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏: {len(usdc_in_name)}")

        # –§–∏–ª—å—Ç—Ä 2: quote == 'USDC'
        usdc_quote = [s for s in markets.keys() if markets[s].get('quote') == 'USDC']
        print(f"   ‚Ä¢ quote == 'USDC': {len(usdc_quote)}")

        # –§–∏–ª—å—Ç—Ä 3: future == True
        future_markets = [s for s in markets.keys() if markets[s].get('future')]
        print(f"   ‚Ä¢ future == True: {len(future_markets)}")

        # –§–∏–ª—å—Ç—Ä 4: –∫–æ–º–±–∏–Ω–∞—Ü–∏—è
        usdc_futures = [s for s in markets.keys()
                       if markets[s].get('quote') == 'USDC' and markets[s].get('future')]
        print(f"   ‚Ä¢ quote == 'USDC' AND future == True: {len(usdc_futures)}")

        if usdc_futures:
            print(f"\nüìã USDC Futures (–ø–æ —Ñ–∏–ª—å—Ç—Ä—É):")
            for symbol in usdc_futures[:10]:
                print(f"   ‚Ä¢ {symbol}")
            if len(usdc_futures) > 10:
                print(f"   ... –∏ –µ—â–µ {len(usdc_futures) - 10} —Å–∏–º–≤–æ–ª–æ–≤")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {e}")

if __name__ == "__main__":
    debug_market_details()
