#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ OptiFlow HFT Bot
"""

import asyncio
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from core.config import TradingConfig
from core.exchange_client import ExchangeClient
from core.ip_monitor import IPMonitor
from core.unified_logger import UnifiedLogger
from telegram.telegram_bot import TelegramBot


async def start_bot():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –ø–æ–ª–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""

    print("üöÄ –ó–ê–ü–£–°–ö OPTIFLOW HFT BOT")
    print("=" * 50)

    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config = TradingConfig()
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä
        logger = UnifiedLogger(config)
        print("‚úÖ –õ–æ–≥–≥–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

        # Telegram Bot
        telegram_bot = TelegramBot(config.telegram_token)
        telegram_bot.set_chat_id(config.telegram_chat_id)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º chat_id
        logger.attach_telegram(telegram_bot)
        print("‚úÖ Telegram Bot –ø–æ–¥–∫–ª—é—á–µ–Ω")

        # Exchange Client
        exchange = ExchangeClient(config, logger)
        print("‚úÖ Exchange Client —Å–æ–∑–¥–∞–Ω")

        # IP Monitor
        ip_monitor = IPMonitor(logger)
        print("‚úÖ IP Monitor —Å–æ–∑–¥–∞–Ω")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        if await exchange.initialize():
            logger.log_event("SYSTEM", "INFO", "üöÄ OptiFlow HFT Bot –∑–∞–ø—É—â–µ–Ω!")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
            await telegram_bot.send_notification("üöÄ OptiFlow HFT Bot –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
            balance = await exchange.get_balance()
            available = await exchange.get_available_balance()
            logger.log_event("BALANCE", "INFO", f"üí∞ –ë–∞–ª–∞–Ω—Å: {balance:.2f} USDC")
            logger.log_event("BALANCE", "INFO", f"üí∞ –î–æ—Å—Ç—É–ø–Ω–æ: {available:.2f} USDC")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –≤ Telegram
            await telegram_bot.send_notification(
                f"üí∞ –ë–∞–ª–∞–Ω—Å: {balance:.2f} USDC\nüí∞ –î–æ—Å—Ç—É–ø–Ω–æ: {available:.2f} USDC"
            )

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º IP
            current_ip = await ip_monitor.get_current_ip()
            logger.log_event("IP_MONITOR", "INFO", f"üåê IP –∞–¥—Ä–µ—Å: {current_ip}")
            await telegram_bot.send_notification(f"üåê IP –∞–¥—Ä–µ—Å: {current_ip}\n‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: OK")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∑–∏—Ü–∏–∏
            positions = await exchange.get_positions()
            logger.log_event("POSITIONS", "INFO", f"üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π: {len(positions)}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ä–¥–µ—Ä–∞
            orders = await exchange.get_open_orders()
            logger.log_event("ORDERS", "INFO", f"üìã –û—Ç–∫—Ä—ã—Ç—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤: {len(orders)}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–º–≤–æ–ª—ã
            symbols = await exchange.get_usdc_symbols()
            logger.log_event("SYMBOLS", "INFO", f"üéØ USDC —Å–∏–º–≤–æ–ª–æ–≤: {len(symbols)}")

            print("\nüéâ –ë–û–¢ –ó–ê–ü–£–©–ï–ù –£–°–ü–ï–®–ù–û!")
            print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –∏ Telegram")
            print("üì± Telegram: @diplex_trade_alert_bot")
            print("üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")

            # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ IP
            await ip_monitor.monitor_loop()

        else:
            logger.log_event("SYSTEM", "ERROR", "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∏—Ä–∂–µ")
            await telegram_bot.send_notification("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∏—Ä–∂–µ!")
            return False

    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
        logger.log_event("SYSTEM", "INFO", "üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        await telegram_bot.send_notification("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return True

    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        if "logger" in locals():
            logger.log_event("SYSTEM", "ERROR", f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        if "telegram_bot" in locals():
            await telegram_bot.send_notification(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        return False


if __name__ == "__main__":
    try:
        result = asyncio.run(start_bot())
        if result:
            print("\n‚úÖ –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("\n‚ùå –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É —Å –æ—à–∏–±–∫–∞–º–∏")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
