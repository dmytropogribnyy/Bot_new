#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å USDC Futures
"""

import asyncio
import json
from core.config import TradingConfig
from core.exchange_client import OptimizedExchangeClient
from core.symbol_manager import SymbolManager
from core.unified_logger import UnifiedLogger

async def test_usdc_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å USDC Futures"""

    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å USDC Futures...")
    print("=" * 60)

    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config = TradingConfig.load_optimized_for_profit_target(0.7)
        logger = UnifiedLogger(config)

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º exchange client
        exchange_client = OptimizedExchangeClient(config, logger)
        await exchange_client.initialize()

        print("‚úÖ Exchange client –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º symbol manager
        symbol_manager = SymbolManager(exchange_client)

        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–∏–º–≤–æ–ª—ã –∏–∑ —Ñ–∞–π–ª–∞
        symbols_from_file = symbol_manager.load_usdc_symbols_from_file()
        print(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å–∏–º–≤–æ–ª–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞: {len(symbols_from_file)}")

        # –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã —á–µ—Ä–µ–∑ API
        available_symbols = await symbol_manager.update_available_symbols()
        print(f"üìä –î–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ –±–∏—Ä–∂–µ: {len(available_symbols)}")

        # –ü–æ–ª—É—á–∞–µ–º —Å–∏–º–≤–æ–ª—ã —á–µ—Ä–µ–∑ exchange client
        usdc_symbols_api = await exchange_client.get_usdc_symbols()
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —á–µ—Ä–µ–∑ API: {len(usdc_symbols_api)}")

        print(f"\nüìã –°–∏–º–≤–æ–ª—ã –∏–∑ —Ñ–∞–π–ª–∞:")
        for i, symbol in enumerate(symbols_from_file[:10], 1):
            print(f"   {i}. {symbol}")
        if len(symbols_from_file) > 10:
            print(f"   ... –∏ –µ—â–µ {len(symbols_from_file) - 10} —Å–∏–º–≤–æ–ª–æ–≤")

        print(f"\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞ –±–∏—Ä–∂–µ:")
        for i, symbol in enumerate(available_symbols[:10], 1):
            print(f"   {i}. {symbol}")
        if len(available_symbols) > 10:
            print(f"   ... –∏ –µ—â–µ {len(available_symbols) - 10} —Å–∏–º–≤–æ–ª–æ–≤")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–∏–∫–µ—Ä–∞ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Å–∏–º–≤–æ–ª–∞
        if available_symbols:
            test_symbol = available_symbols[0]
            ticker = await exchange_client.get_ticker(test_symbol)
            if ticker:
                print(f"\nüìä –¢–µ—Å—Ç —Ç–∏–∫–µ—Ä–∞ –¥–ª—è {test_symbol}:")
                print(f"   ‚Ä¢ –¶–µ–Ω–∞: ${ticker['last']:.4f}")
                print(f"   ‚Ä¢ –û–±—ä–µ–º: ${ticker['quoteVolume']:,.0f}")
                print(f"   ‚Ä¢ Bid: ${ticker['bid']:.4f}")
                print(f"   ‚Ä¢ Ask: ${ticker['ask']:.4f}")
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–∏–∫–µ—Ä –¥–ª—è {test_symbol}")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ OHLCV
        if available_symbols:
            ohlcv = await exchange_client.get_ohlcv(test_symbol, '15m', 20)
            if ohlcv:
                print(f"\nüìà –¢–µ—Å—Ç OHLCV –¥–ª—è {test_symbol}:")
                print(f"   ‚Ä¢ –ü–æ–ª—É—á–µ–Ω–æ —Å–≤–µ—á–µ–π: {len(ohlcv)}")
                print(f"   ‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è —Ü–µ–Ω–∞: ${ohlcv[-1]['close']:.4f}")
                print(f"   ‚Ä¢ –ú–∞–∫—Å–∏–º—É–º: ${ohlcv[-1]['high']:.4f}")
                print(f"   ‚Ä¢ –ú–∏–Ω–∏–º—É–º: ${ohlcv[-1]['low']:.4f}")
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å OHLCV –¥–ª—è {test_symbol}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
        balance = await exchange_client.get_balance()
        if balance is not None:
            print(f"\nüí∞ –ë–∞–ª–∞–Ω—Å USDC: ${balance:,.2f}")
        else:
            print(f"\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å")

        print(f"\n" + "=" * 60)
        print(f"üìà –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò:")
        print(f"   ‚Ä¢ –°–∏–º–≤–æ–ª—ã –≤ —Ñ–∞–π–ª–µ: {len(symbols_from_file)}")
        print(f"   ‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ –±–∏—Ä–∂–µ: {len(available_symbols)}")
        print(f"   ‚Ä¢ –ù–∞–π–¥–µ–Ω–æ —á–µ—Ä–µ–∑ API: {len(usdc_symbols_api)}")

        if len(available_symbols) >= 30:
            print(f"   ‚úÖ –û—Ç–ª–∏—á–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è - –Ω–∞–π–¥–µ–Ω–æ {len(available_symbols)} —Å–∏–º–≤–æ–ª–æ–≤")
        elif len(available_symbols) >= 20:
            print(f"   ‚úÖ –•–æ—Ä–æ—à–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è - –Ω–∞–π–¥–µ–Ω–æ {len(available_symbols)} —Å–∏–º–≤–æ–ª–æ–≤")
        elif len(available_symbols) >= 10:
            print(f"   ‚ö†Ô∏è –ü—Ä–∏–µ–º–ª–µ–º–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è - –Ω–∞–π–¥–µ–Ω–æ {len(available_symbols)} —Å–∏–º–≤–æ–ª–æ–≤")
        else:
            print(f"   ‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π - –Ω–∞–π–¥–µ–Ω–æ —Ç–æ–ª—å–∫–æ {len(available_symbols)} —Å–∏–º–≤–æ–ª–æ–≤")

        await exchange_client.cleanup()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: {e}")

if __name__ == "__main__":
    asyncio.run(test_usdc_integration())
