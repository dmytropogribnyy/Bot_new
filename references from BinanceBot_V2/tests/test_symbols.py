#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤ USDC —Ñ—å—é—á–µ—Ä—Å–æ–≤
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from core.config import TradingConfig
from core.exchange_client import OptimizedExchangeClient
from core.unified_logger import UnifiedLogger


async def test_symbols():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤ USDC —Ñ—å—é—á–µ—Ä—Å–æ–≤"""

    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤ USDC —Ñ—å—é—á–µ—Ä—Å–æ–≤...")

    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        config = TradingConfig()
        logger = UnifiedLogger(config)
        exchange = OptimizedExchangeClient(config, logger)

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º exchange
        await exchange.initialize()

        # –û—á–∏—â–∞–µ–º –∫–µ—à —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–µ–∂–∏—Ö –¥–∞–Ω–Ω—ã—Ö
        exchange._cache.pop('usdc_symbols', None)

        # –ü–æ–ª—É—á–∞–µ–º —Å–∏–º–≤–æ–ª—ã
        symbols = await exchange.get_usdc_symbols()

        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(symbols)} —Å–∏–º–≤–æ–ª–æ–≤ USDC —Ñ—å—é—á–µ—Ä—Å–æ–≤")

        if symbols:
            print("\nüìä –ü–µ—Ä–≤—ã–µ 20 —Å–∏–º–≤–æ–ª–æ–≤:")
            for i, symbol in enumerate(symbols[:20], 1):
                print(f"{i:2d}. {symbol}")

            if len(symbols) > 20:
                print(f"... –∏ –µ—â–µ {len(symbols) - 20} —Å–∏–º–≤–æ–ª–æ–≤")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–∫–µ—Ä—ã –¥–ª—è –ø–µ—Ä–≤—ã—Ö 5 —Å–∏–º–≤–æ–ª–æ–≤
        print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–∫–µ—Ä–æ–≤ –¥–ª—è –ø–µ—Ä–≤—ã—Ö 5 —Å–∏–º–≤–æ–ª–æ–≤:")
        for symbol in symbols[:5]:
            try:
                ticker = await exchange.get_ticker(symbol)
                if ticker:
                    volume = ticker.get('quoteVolume', 0)
                    price = ticker.get('last', 0)
                    print(f"‚úÖ {symbol}: —Ü–µ–Ω–∞=${price:.4f}, –æ–±—ä–µ–º={volume:.0f} USDC")
                else:
                    print(f"‚ùå {symbol}: —Ç–∏–∫–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            except Exception as e:
                print(f"‚ùå {symbol}: –æ—à–∏–±–∫–∞ - {e}")

        await exchange.cleanup()
        print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        return False

    return True


if __name__ == "__main__":
    try:
        success = asyncio.run(test_symbols())
        if success:
            print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("üí• –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
            sys.exit(1)
    except KeyboardInterrupt:
        print("\nüõë –¢–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
