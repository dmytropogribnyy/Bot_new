#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç Telegram –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
"""

import asyncio

import requests

# –î–∞–Ω–Ω—ã–µ –∏–∑ runtime_config.json
TELEGRAM_TOKEN = "7681205697:AAFB1FogqFMgoTgcu2vkDOmdcd-FYW4YdbU"
CHAT_ID = "383821734"

async def test_telegram_simple():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç Telegram —á–µ—Ä–µ–∑ requests"""

    print("üß™ –ü–†–û–°–¢–û–ô –¢–ï–°–¢ TELEGRAM")
    print("=" * 40)

    print(f"üì± Token: {TELEGRAM_TOKEN[:20]}...")
    print(f"üí¨ Chat ID: {CHAT_ID}")

    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–æ—Ç–∞
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–æ—Ç–∞...")
    try:
        url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/getMe"
        response = requests.get(url, timeout=10)

        if response.status_code == 200:
            bot_info = response.json()
            print(f"‚úÖ –ë–æ—Ç –Ω–∞–π–¥–µ–Ω: {bot_info['result']['first_name']}")
            print(f"‚úÖ Username: @{bot_info['result']['username']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–æ—Ç–∞: {e}")
        return False

    # –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    print("\n2. –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...")
    try:
        url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
        data = {
            "chat_id": CHAT_ID,
            "text": "üß™ –¢–µ—Å—Ç Telegram –±–æ—Ç–∞\n‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
        }

        response = requests.post(url, json=data, timeout=10)

        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
            print(f"‚úÖ Message ID: {result['result']['message_id']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return False

    # –¢–µ—Å—Ç 3: –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    print("\n3. –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...")
    messages = [
        "üöÄ OptiFlow HFT Bot - –¢–µ—Å—Ç 1",
        "üí∞ –ë–∞–ª–∞–Ω—Å: 343.00 USDC",
        "üåê IP: 178.41.93.39",
        "‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
    ]

    for i, message in enumerate(messages, 1):
        try:
            url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
            data = {
                "chat_id": CHAT_ID,
                "text": f"–¢–µ—Å—Ç {i}: {message}"
            }

            response = requests.post(url, json=data, timeout=10)

            if response.status_code == 200:
                print(f"‚úÖ –¢–µ—Å—Ç {i} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ {i}: {response.status_code}")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ {i}: {e}")

    print("\nüéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
    print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à Telegram: @diplex_trade_alert_bot")
    return True

if __name__ == "__main__":
    try:
        result = asyncio.run(test_telegram_simple())
        if result:
            print("\n‚úÖ Telegram —Ç–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω!")
        else:
            print("\n‚ùå Telegram —Ç–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω!")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
