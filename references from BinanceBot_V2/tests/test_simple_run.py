#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
"""

import asyncio
import time
from core.config import TradingConfig
from core.exchange_client import OptimizedExchangeClient
from core.symbol_manager import SymbolManager
from core.unified_logger import UnifiedLogger

async def test_simple_run():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞"""

    print("üöÄ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞...")
    print("=" * 50)

    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config = TradingConfig.load_optimized_for_profit_target(0.7)
        logger = UnifiedLogger(config)

        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º exchange client
        exchange = OptimizedExchangeClient(config, logger)
        await exchange.initialize()

        print("‚úÖ Exchange client –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º symbol manager
        symbol_manager = SymbolManager(exchange, None)  # –ë–µ–∑ telegram
        await symbol_manager.update_available_symbols()

        print("‚úÖ Symbol manager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

        # –ü–æ–ª—É—á–∞–µ–º —Å–∏–º–≤–æ–ª—ã
        symbols = await symbol_manager.get_active_symbols()
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å–∏–º–≤–æ–ª–æ–≤: {len(symbols)}")

        if symbols:
            print(f"üìã –ü–µ—Ä–≤—ã–µ 5 —Å–∏–º–≤–æ–ª–æ–≤:")
            for i, symbol in enumerate(symbols[:5], 1):
                print(f"   {i}. {symbol}")

            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Å–∏–º–≤–æ–ª–∞
            test_symbol = symbols[0]
            print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è {test_symbol}:")

            # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–∫–µ—Ä
            ticker = await exchange.get_ticker(test_symbol)
            if ticker:
                print(f"   ‚úÖ –¢–∏–∫–µ—Ä –ø–æ–ª—É—á–µ–Ω: ${ticker['last']:.4f}")
            else:
                print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–∏–∫–µ—Ä")

            # –ü–æ–ª—É—á–∞–µ–º OHLCV
            ohlcv = await symbol_manager.get_recent_ohlcv(test_symbol, '15m', 20)
            if ohlcv:
                print(f"   ‚úÖ OHLCV –ø–æ–ª—É—á–µ–Ω: {len(ohlcv)} —Å–≤–µ—á–µ–π")
                print(f"   üìä –ü–æ—Å–ª–µ–¥–Ω—è—è —Ü–µ–Ω–∞: ${ohlcv[-1]['close']:.4f}")
            else:
                print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å OHLCV")

            # –ü–æ–ª—É—á–∞–µ–º ATR
            atr = await symbol_manager.get_atr_percent(test_symbol)
            print(f"   üìà ATR: {atr:.4f}%")

        print(f"\n" + "=" * 50)
        print(f"üéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
        print(f"   ‚Ä¢ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: ‚úÖ")
        print(f"   ‚Ä¢ Exchange Client: ‚úÖ")
        print(f"   ‚Ä¢ Symbol Manager: ‚úÖ")
        print(f"   ‚Ä¢ –°–∏–º–≤–æ–ª—ã –Ω–∞–π–¥–µ–Ω—ã: {len(symbols)}")
        print(f"   ‚Ä¢ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–∞—é—Ç—Å—è: ‚úÖ")

        await exchange.cleanup()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_simple_run())
