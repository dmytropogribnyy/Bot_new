#!/usr/bin/env python3
"""
–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É testnet –∏ production –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏
"""

import shutil
import sys
from pathlib import Path


def switch_to_testnet():
    """–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ testnet"""
    # –ö–æ–ø–∏—Ä—É–µ–º .env —Ñ–∞–π–ª—ã
    shutil.copy(".env.testnet", ".env")
    shutil.copy("runtime_config.testnet.json", "data/runtime_config.json")
    print("‚úÖ Switched to TESTNET")
    print("   .env.testnet ‚Üí .env")
    print("   runtime_config.testnet.json ‚Üí data/runtime_config.json")


def switch_to_production():
    """–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ production"""
    # –ö–æ–ø–∏—Ä—É–µ–º .env —Ñ–∞–π–ª—ã
    shutil.copy(".env.production", ".env")
    shutil.copy("runtime_config.prod.json", "data/runtime_config.json")
    print("‚úÖ Switched to PRODUCTION")
    print("   .env.production ‚Üí .env")
    print("   runtime_config.prod.json ‚Üí data/runtime_config.json")


def check_current_mode():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º"""
    env_file = Path(".env")
    if not env_file.exists():
        print("‚ùå .env file not found!")
        return

    with open(env_file) as f:
        content = f.read()

    if "BINANCE_TESTNET=true" in content:
        mode = "TESTNET"
    elif "BINANCE_TESTNET=false" in content:
        mode = "PRODUCTION"
    else:
        mode = "UNKNOWN"

    print(f"üìä Current mode: {mode}")


def main():
    if len(sys.argv) != 2:
        print("Usage:")
        print("  python switch_env.py testnet    - Switch to testnet")
        print("  python switch_env.py production - Switch to production")
        print("  python switch_env.py check      - Check current mode")
        sys.exit(1)

    command = sys.argv[1].lower()

    if command == "testnet":
        switch_to_testnet()
    elif command in ["production", "prod"]:
        switch_to_production()
    elif command == "check":
        check_current_mode()
    else:
        print(f"‚ùå Unknown command: {command}")
        sys.exit(1)


if __name__ == "__main__":
    main()
