# score_evaluator.py ‚Äî –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –º–æ–¥—É–ª—å —Ä–∞—Å—á—ë—Ç–∞ —Å–∏–≥–Ω–∞–ª—å–Ω–æ–≥–æ score

from config import ADAPTIVE_SCORE_ENABLED, DRY_RUN, MIN_TRADE_SCORE
from utils_logging import log


def calculate_score(df, symbol=None):
    """
    –í—ã—á–∏—Å–ª—è–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–π score –ø–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –≥–∏–±–∫–æ–π –∞–¥–∞–ø—Ç–∞—Ü–∏–∏.
    """
    score = 0
    rsi = df["rsi"].iloc[-1]
    macd = df["macd"].iloc[-1]
    signal = df["macd_signal"].iloc[-1]
    ema = df["ema"].iloc[-1]
    price = df["close"].iloc[-1]
    htf_trend = df.get("htf_trend", [False])[-1]

    # –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã RSI (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)
    rsi_lo, rsi_hi = (30, 70)
    if ADAPTIVE_SCORE_ENABLED:
        if price > ema:
            rsi_lo, rsi_hi = 35, 75
        else:
            rsi_lo, rsi_hi = 25, 65

    if rsi < rsi_lo or rsi > rsi_hi:
        score += 1
    if (macd > signal and rsi < 50) or (macd < signal and rsi > 50):
        score += 1
    if (macd > signal and price > ema) or (macd < signal and price < ema):
        score += 1
    if htf_trend and price > ema:
        score += 1

    if DRY_RUN:
        log(f"{symbol or ''} üìä Score: {score}/5", level="DEBUG")

    return score


def get_adaptive_min_score(trade_count_last_days=0, winrate=0.0):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –ø–æ—Ä–æ–≥ score –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
    """
    if trade_count_last_days < 20:
        return max(MIN_TRADE_SCORE - 1, 1)  # –º—è–≥–∫–∏–π —Å—Ç–∞—Ä—Ç
    if winrate < 0.4:
        return MIN_TRADE_SCORE - 1
    if winrate > 0.6:
        return MIN_TRADE_SCORE + 1
    return MIN_TRADE_SCORE


def explain_score(df):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–π breakdown score –¥–ª—è Telegram-–æ—Ç—á—ë—Ç–æ–≤
    """
    rsi = df["rsi"].iloc[-1]
    macd = df["macd"].iloc[-1]
    signal = df["macd_signal"].iloc[-1]
    ema = df["ema"].iloc[-1]
    price = df["close"].iloc[-1]
    htf_trend = df.get("htf_trend", [False])[-1]

    components = []
    if rsi < 30 or rsi > 70:
        components.append("‚úÖ RSI extreme")
    if (macd > signal and rsi < 50) or (macd < signal and rsi > 50):
        components.append("‚úÖ MACD/RSI aligned")
    if (macd > signal and price > ema) or (macd < signal and price < ema):
        components.append("‚úÖ Price/MACD vs EMA aligned")
    if htf_trend and price > ema:
        components.append("‚úÖ HTF trend confirmed")

    return "\n".join(components)
