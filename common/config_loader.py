# common/config_loader.py

import os

from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()


def get_config(var_name: str, default=None):
    """–ü–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å –¥–µ—Ñ–æ–ª—Ç."""
    return os.getenv(var_name, default)


# üîπ –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞

# Binance API
API_KEY = get_config("API_KEY")
API_SECRET = get_config("API_SECRET")
USE_TESTNET = get_config("USE_TESTNET", "False") == "True"

# Telegram
TELEGRAM_TOKEN = get_config("TELEGRAM_TOKEN")
TELEGRAM_CHAT_ID = get_config("TELEGRAM_CHAT_ID")

# –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
DRY_RUN = get_config("DRY_RUN", "False") == "True"
EXPORT_PATH = get_config("EXPORT_PATH", "data/")
TP_LOG_FILE = get_config("TP_LOG_FILE", "data/tp_log.csv")
LOG_FILE_PATH = get_config("LOG_FILE_PATH", "logs/main.log")
LOG_LEVEL = get_config("LOG_LEVEL", "INFO")

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–æ—Ä–≥–æ–≤–ª–∏
LEVERAGE_MAP = {
    "BTCUSDT": 5,
    "ETHUSDT": 5,
    "DOGEUSDC": 10,
    # –º–æ–∂–Ω–æ –¥–æ–ø–æ–ª–Ω—è—Ç—å —Å–≤–æ–∏ –ø–∞—Ä—ã
}

SYMBOLS_ACTIVE = get_config("SYMBOLS_ACTIVE", "").split(",") if get_config("SYMBOLS_ACTIVE") else []

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã TP/SL
TP1_PERCENT = float(get_config("TP1_PERCENT", "0.7"))
TP2_PERCENT = float(get_config("TP2_PERCENT", "1.4"))

# –§–ª–∞–≥–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
USE_HTF_CONFIRMATION = get_config("USE_HTF_CONFIRMATION", "False") == "True"
ADAPTIVE_SCORE_ENABLED = get_config("ADAPTIVE_SCORE_ENABLED", "True") == "True"
AGGRESSIVENESS_THRESHOLD = float(get_config("AGGRESSIVENESS_THRESHOLD", "0.6"))

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–µ—Å–ª–∏ –±—É–¥—É—Ç)
CONFIG_FILE = get_config("CONFIG_FILE", "config/config.json")
FIXED_PAIRS = get_config("FIXED_PAIRS", "").split(",") if get_config("FIXED_PAIRS") else []
VERBOSE = get_config("VERBOSE", "False") == "True"
